name: pr build for Client

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Tests for Client
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if files in packages/client have changed
      - name: Check for changes in client
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} -- packages/client --depth=1
          git diff --quiet origin/${{ github.base_ref }} -- packages/client || echo "changes-detected"
      - name: Skip tests if no changes
        if: steps.changes.outputs.changes-detected != 'true'
        run: echo "No changes detected in packages/client. Skipping tests."

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      # Install dependencies
      - name: Install dependencies
        working-directory: packages/client
        run: yarn install

      # Run tests
      - name: Run tests
        working-directory: packages/client
        run: yarn test

  build:
    name: Build Client
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if files in packages/client have changed
      - name: Check for changes in client
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} -- packages/client --depth=1
          git diff --quiet origin/${{ github.base_ref }} -- packages/client || echo "changes-detected"
      - name: Skip build if no changes
        if: steps.changes.outputs.changes-detected != 'true'
        run: echo "No changes detected in packages/client. Skipping build."

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      # Install dependencies
      - name: Install dependencies
        working-directory: packages/client
        run: yarn install

      # Build the project
      - name: Build project
        working-directory: packages/client
        run: yarn build
