diff --git a/node_modules/string-length/index.js b/node_modules/string-length/index.js
index c2589a2..1731a18 100644
--- a/node_modules/string-length/index.js
+++ b/node_modules/string-length/index.js
@@ -1,7 +1,29 @@
 'use strict';
-const stripAnsi = require('strip-ansi');
+// const stripAnsi = require('strip-ansi');
 const charRegex = require('char-regex');
 
+// temoporary patch to fix the issue with strip-ansi package
+
+function ansiRegex({onlyFirst = false} = {}) {
+	const pattern = [
+		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
+		'(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'
+	].join('|');
+
+	return new RegExp(pattern, onlyFirst ? undefined : 'g');
+}
+const regex = ansiRegex();
+
+function stripAnsi(string) {
+	if (typeof string !== 'string') {
+		throw new TypeError(`Expected a \`string\`, got \`${typeof string}\``);
+	}
+
+	// Even though the regex is global, we don't need to reset the `.lastIndex`
+	// because unlike `.exec()` and `.test()`, `.replace()` does it automatically
+	// and doing it manually has a performance penalty.
+	return string.replace(regex, '');
+}
 const stringLength = string => {
 	if (string === '') {
 		return 0;
